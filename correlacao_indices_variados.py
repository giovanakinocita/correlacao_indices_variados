# -*- coding: utf-8 -*-
"""correlacao_indices_variados

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wwmVO1sewF_HcPeiyK6dnvWv1K-BDheB

# Correlações entre índices, indicadores macroeconômicos, ações, commodities e fundos
"""

pip install investpy

pip install fix-yahoo-finance

!pip install -U pandas_datareader

import pandas_datareader as pdr
import yfinance as yf
import pandas as pd
from pandas_datareader import data as pdr

yf.pdr_override()

inicio = '2020-02-09'

acoes = ['PETR4.SA', 'WEGE3.SA', 'MGLU3.SA', 'LREN3.SA', 'VALE3.SA', 'BPAC11.SA']

precos_acoes = pd.DataFrame()

for i in acoes:
 precos_acoes[i] = pdr.get_data_yahoo(i, start = inicio)['Adj Close']

precos_acoes.head()

"""# Importando dados de fundos imobiliários"""

ativos = ['KNRI11.SA', 'ONEF11.SA', 'HCTR11.SA', 'HGLG11.SA', 'HGBS11.SA']

precos_ativos = pd.DataFrame()

for i in ativos:
 precos_ativos[i] = pdr.get_data_yahoo(i, start = inicio)['Adj Close']

"""# Importando dados sobre ouro (commodity)"""

ibovespa = yf.download('^BVSP', start = inicio)['Adj Close']

ibov = pd.DataFrame(ibovespa).rename(columns = {'Adj Close': 'IBOV'})
ibov

ouro1 = yf.download('GC=F', start = inicio)['Adj Close']

ouro = pd.DataFrame(ouro1).rename(columns = {'Adj Close': 'Gold'})
ouro

"""# Importando dados de Criptomoedas"""

bit1 = yf.download('BTC-USD', start = inicio)['Adj Close']

bitcoin = pd.DataFrame(bit1).rename(columns = {'Adj Close': 'Bitcoin'})
bitcoin

"""# Importando dados sobre o dólar"""

dolar1 = yf.download('BRL=X', start = inicio)['Adj Close']

dolar = pd.DataFrame(dolar1).rename(columns = {'Adj Close': 'Dolar'})
dolar

"""# Importando dados macroeconômicos brasileiros (Banco Central do Brasil)"""

pip install python-bcb

from bcb import sgs

"""Selic"""

selic1 = sgs.get({'selic': 432}, start = inicio)

selic = pd.DataFrame(selic1).rename(columns = {'selic': 'Selic'})
selic

"""Inflação: IPCA e IGP-M"""

igpm1 = sgs.get({'igp-m': 189}, start = inicio)

igpm = pd.DataFrame(igpm1).rename(columns = {'igp-m': 'IGP-M'})
igpm

ipca1 = sgs.get({'ipca': 433}, start = inicio)

ipca = pd.DataFrame(ipca1).rename(columns = {'ipca': 'IPCA'})
ipca

"""Junção dos dados"""

from functools import reduce

dfs = [precos_acoes, precos_ativos, ibov, ouro, bitcoin, dolar, selic, ipca, igpm]

df_final = reduce(lambda left, right: pd.merge(left, right, on = 'Date', how = 'inner'), dfs)

df_final.head(100)

"""# Matriz de correlação com matriz de calor"""

import seaborn as sns
import matplotlib.pyplot as plt

sns.heatmap(df_final.corr())

plt.figure(figsize = (14, 8))

sns.heatmap(df_final.corr(), vmin = -1, vmax = 1, annot = True, cmap = 'BrBG')